apiVersion: apps/v1
kind: Deployment
metadata:
  name: rp-dashboard
  namespace: lilypad
  labels:
    app: rp-dashboard
  annotations:
    tekton.dev/lastBuilt: ""  # This will be updated by the pipeline
    argocd.argoproj.io/compare-options: IgnoreResourceVersion,IgnoreResourceStatusField
    argocd.argoproj.io/sync-options: Prune=false,SkipDryRunOnMissingResource=true,FieldManager=argocd-deploy
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"rp-dashboard"},"name":"rp-dashboard","namespace":"lilypad"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"rp-dashboard"}},"template":{"metadata":{"labels":{"app":"rp-dashboard"}},"spec":{"containers":[{"image":"registry:5000/rp_status-rp-dashboard:latest","imagePullPolicy":"Always","name":"rp-dashboard","ports":[{"containerPort":80}],"resources":{"limits":{"cpu":"0.5","memory":"512Mi"},"requests":{"cpu":"0.2","memory":"256Mi"}}}],"imagePullSecrets":[{"name":"registry-credentials"}]}}}}'
spec:
  replicas: 1
  # IMPORTANT: The selector field is immutable - do not change this section!
  selector:
    matchLabels:
      app: rp-dashboard
  template:
    metadata:
      labels:
        app: rp-dashboard
    spec:
      initContainers:
      - name: copy-source
        image: alpine:latest
        command:
        - /bin/sh
        - -c
        - |
          # Copy the application files to the workspace
          cp -R /root/rp_status/* /workspace/
          echo "Source code copied to workspace for building"
        volumeMounts:
        - name: workspace-volume
          mountPath: /workspace
        - name: root-volume
          mountPath: /root
      - name: build-container
        image: gcr.io/kaniko-project/executor:latest
        args:
        - "--dockerfile=/workspace/Dockerfile"
        - "--context=dir:///workspace"
        - "--no-push"
        - "--tarPath=/workspace/image.tar"
        volumeMounts:
        - name: workspace-volume
          mountPath: /workspace
      - name: load-image
        image: docker:20.10
        securityContext:
          privileged: true
        command:
        - /bin/sh
        - -c
        - |
          # Start Docker daemon in background
          dockerd &
          sleep 5
          # Load the image from tar
          docker load < /workspace/image.tar
          # Tag it for local use
          docker tag rp_status-rp-dashboard:latest localhost:5000/rp_status-rp-dashboard:latest
          echo "Image ready for use"
        volumeMounts:
        - name: workspace-volume
          mountPath: /workspace
        - name: docker-socket
          mountPath: /var/run/docker.sock
      containers:
      - name: rp-dashboard
        image: localhost:5000/rp_status-rp-dashboard:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: root-volume
        hostPath:
          path: /root
          type: Directory
